{"ast":null,"code":"/* eslint no-restricted-globals: 0 */\nimport auth0 from \"auth0-js\";\nimport jwtDecode from \"jwt-decode\";\nconst LOGIN_SUCCESS_PAGE = \"/myfeed\";\nconst LOGIN_FAILURE_PAGE = \"/\";\nexport default class Auth {\n  constructor() {\n    this.auth0 = new auth0.WebAuth({\n      domain: \"dev-qm0-ivzk.auth0.com\",\n      clientID: \"QNCYbMnNO5ezHlm7WMc694bM6MOenTgO\",\n      redirectUri: window.location + \"callback\",\n      audience: \"https://dev-qm0-ivzk.auth0.com/userinfo\",\n      responseType: \"token id_token\",\n      scope: \"openid profile\"\n    });\n    this.login = this.login.bind(this);\n  }\n\n  login() {\n    console.log('login method in auth.js');\n    this.auth0.authorize();\n  }\n\n  handleAuthentication() {\n    console.log('parse hash');\n    this.auth0.parseHash((err, authResults) => {\n      console.log(authResults);\n\n      if (authResults && authResults.accessToken && authResults.idToken) {\n        let expiresAt = JSON.stringify(authResults.expiresIn * 1000 + new Date().getTime());\n        localStorage.setItem(\"access_token\", authResults.accessToken);\n        localStorage.setItem(\"id_token\", authResults.idToken);\n        localStorage.setItem(\"expires_at\", expiresAt);\n        window.location.hash = \"\"; // window.location.pathname = LOGIN_SUCCESS_PAGE;\n      } else if (err) {\n        window.location.pathname = LOGIN_FAILURE_PAGE;\n        console.log(err);\n      }\n    });\n  }\n\n  isAuthenticated() {\n    let expiresAt = JSON.parse(localStorage.getItem(\"expires_at\"));\n    return new Date().getTime() < expiresAt;\n  }\n\n  logout() {\n    localStorage.removeItem(\"access_token\");\n    localStorage.removeItem(\"id_token\");\n    localStorage.removeItem(\"expires_at\");\n    window.location.pathname = LOGIN_FAILURE_PAGE;\n  }\n\n  getProfile() {\n    if (localStorage.getItem(\"id_token\")) {\n      return jwtDecode(localStorage.getItem(\"id_token\"));\n    } else {\n      return {};\n    }\n  }\n\n}","map":{"version":3,"sources":["/my projects/pocketPhotoEditor/client/src/Auth.js"],"names":["auth0","jwtDecode","LOGIN_SUCCESS_PAGE","LOGIN_FAILURE_PAGE","Auth","constructor","WebAuth","domain","clientID","redirectUri","window","location","audience","responseType","scope","login","bind","console","log","authorize","handleAuthentication","parseHash","err","authResults","accessToken","idToken","expiresAt","JSON","stringify","expiresIn","Date","getTime","localStorage","setItem","hash","pathname","isAuthenticated","parse","getItem","logout","removeItem","getProfile"],"mappings":"AAAA;AACA,OAAOA,KAAP,MAAkB,UAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,MAAMC,kBAAkB,GAAG,SAA3B;AACA,MAAMC,kBAAkB,GAAG,GAA3B;AAEA,eAAe,MAAMC,IAAN,CAAW;AAUtBC,EAAAA,WAAW,GAAG;AAAA,SATdL,KASc,GATN,IAAIA,KAAK,CAACM,OAAV,CAAkB;AACtBC,MAAAA,MAAM,EAAE,wBADc;AAEtBC,MAAAA,QAAQ,EAAE,kCAFY;AAGtBC,MAAAA,WAAW,EAAEC,MAAM,CAACC,QAAP,GAAkB,UAHT;AAItBC,MAAAA,QAAQ,EAAE,yCAJY;AAKtBC,MAAAA,YAAY,EAAE,gBALQ;AAMtBC,MAAAA,KAAK,EAAE;AANe,KAAlB,CASM;AACV,SAAKC,KAAL,GAAa,KAAKA,KAAL,CAAWC,IAAX,CAAgB,IAAhB,CAAb;AACH;;AAEDD,EAAAA,KAAK,GAAG;AACJE,IAAAA,OAAO,CAACC,GAAR,CAAY,yBAAZ;AACA,SAAKlB,KAAL,CAAWmB,SAAX;AACH;;AAEDC,EAAAA,oBAAoB,GAAG;AACnBH,IAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ;AACA,SAAKlB,KAAL,CAAWqB,SAAX,CAAqB,CAACC,GAAD,EAAMC,WAAN,KAAsB;AACvCN,MAAAA,OAAO,CAACC,GAAR,CAAYK,WAAZ;;AACA,UAAIA,WAAW,IAAIA,WAAW,CAACC,WAA3B,IAA0CD,WAAW,CAACE,OAA1D,EAAmE;AAC/D,YAAIC,SAAS,GAAGC,IAAI,CAACC,SAAL,CAAgBL,WAAW,CAACM,SAAb,GAA0B,IAA1B,GAAiC,IAAIC,IAAJ,GAAWC,OAAX,EAAhD,CAAhB;AACAC,QAAAA,YAAY,CAACC,OAAb,CAAqB,cAArB,EAAqCV,WAAW,CAACC,WAAjD;AACAQ,QAAAA,YAAY,CAACC,OAAb,CAAqB,UAArB,EAAiCV,WAAW,CAACE,OAA7C;AACAO,QAAAA,YAAY,CAACC,OAAb,CAAqB,YAArB,EAAmCP,SAAnC;AACAhB,QAAAA,MAAM,CAACC,QAAP,CAAgBuB,IAAhB,GAAuB,EAAvB,CAL+D,CAM/D;AAEH,OARD,MAQO,IAAIZ,GAAJ,EAAS;AACZZ,QAAAA,MAAM,CAACC,QAAP,CAAgBwB,QAAhB,GAA2BhC,kBAA3B;AACAc,QAAAA,OAAO,CAACC,GAAR,CAAYI,GAAZ;AACH;AACJ,KAdD;AAeH;;AAEDc,EAAAA,eAAe,GAAG;AACd,QAAIV,SAAS,GAAGC,IAAI,CAACU,KAAL,CAAWL,YAAY,CAACM,OAAb,CAAqB,YAArB,CAAX,CAAhB;AACA,WAAO,IAAIR,IAAJ,GAAWC,OAAX,KAAuBL,SAA9B;AACH;;AAEDa,EAAAA,MAAM,GAAG;AACLP,IAAAA,YAAY,CAACQ,UAAb,CAAwB,cAAxB;AACAR,IAAAA,YAAY,CAACQ,UAAb,CAAwB,UAAxB;AACAR,IAAAA,YAAY,CAACQ,UAAb,CAAwB,YAAxB;AACA9B,IAAAA,MAAM,CAACC,QAAP,CAAgBwB,QAAhB,GAA2BhC,kBAA3B;AACH;;AAEDsC,EAAAA,UAAU,GAAG;AACT,QAAGT,YAAY,CAACM,OAAb,CAAqB,UAArB,CAAH,EAAqC;AACjC,aAAOrC,SAAS,CAAC+B,YAAY,CAACM,OAAb,CAAqB,UAArB,CAAD,CAAhB;AACH,KAFD,MAEO;AACH,aAAO,EAAP;AACH;AACJ;;AAxDqB","sourcesContent":["/* eslint no-restricted-globals: 0 */\nimport auth0 from \"auth0-js\";\nimport jwtDecode from \"jwt-decode\";\n\nconst LOGIN_SUCCESS_PAGE = \"/myfeed\";\nconst LOGIN_FAILURE_PAGE = \"/\";\n\nexport default class Auth {\n    auth0 = new auth0.WebAuth({\n        domain: \"dev-qm0-ivzk.auth0.com\",\n        clientID: \"QNCYbMnNO5ezHlm7WMc694bM6MOenTgO\",\n        redirectUri: window.location + \"callback\",\n        audience: \"https://dev-qm0-ivzk.auth0.com/userinfo\",\n        responseType: \"token id_token\",\n        scope: \"openid profile\" \n    });\n\n    constructor() {\n        this.login = this.login.bind(this);\n    }\n\n    login() {\n        console.log('login method in auth.js')\n        this.auth0.authorize();\n    }\n\n    handleAuthentication() {\n        console.log('parse hash')\n        this.auth0.parseHash((err, authResults) => {\n            console.log(authResults);\n            if (authResults && authResults.accessToken && authResults.idToken) {\n                let expiresAt = JSON.stringify((authResults.expiresIn) * 1000 + new Date().getTime());\n                localStorage.setItem(\"access_token\", authResults.accessToken);\n                localStorage.setItem(\"id_token\", authResults.idToken);\n                localStorage.setItem(\"expires_at\", expiresAt);\n                window.location.hash = \"\";\n                // window.location.pathname = LOGIN_SUCCESS_PAGE;\n\n            } else if (err) {\n                window.location.pathname = LOGIN_FAILURE_PAGE;\n                console.log(err);\n            }\n        })\n    }\n\n    isAuthenticated() {\n        let expiresAt = JSON.parse(localStorage.getItem(\"expires_at\"));\n        return new Date().getTime() < expiresAt;\n    }\n\n    logout() {\n        localStorage.removeItem(\"access_token\");\n        localStorage.removeItem(\"id_token\");\n        localStorage.removeItem(\"expires_at\");\n        window.location.pathname = LOGIN_FAILURE_PAGE;\n    }\n\n    getProfile() {\n        if(localStorage.getItem(\"id_token\")) {\n            return jwtDecode(localStorage.getItem(\"id_token\"));\n        } else {\n            return {};\n        }\n    }\n}"]},"metadata":{},"sourceType":"module"}