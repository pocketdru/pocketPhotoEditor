{"ast":null,"code":"var _jsxFileName = \"/my projects/pocketPhotoEditor/client/src/components/FileUpload/index.js\";\nimport React, { Fragment, useState } from \"react\";\nimport Message from \"./Message.js\";\nimport axios from \"axios\";\n\nconst FileUpload = () => {\n  const [file, setFile] = useState(\"\");\n  const [filename, setFilename] = useState(\"Choose File\");\n  const [uploadedFile, setuploadedFile] = useState({});\n  const [message, setMessage] = useState(\"\");\n  const [uploadPercentage, setUploadPercentage] = useState(0);\n\n  const onChange = e => {\n    console.log(e.target.files[0]);\n    setFile(e.target.files[0]);\n    setFilename(e.target.files[0].name);\n  };\n\n  const onSubmit = async e => {\n    e.preventDefault();\n    const formData = new FormData();\n    formData.append(\"file\", file);\n\n    try {\n      const res = await axios.post(\"/upload\", formData, {\n        headers: {\n          \"Content-Type\": \"multipart/form-data\"\n        },\n        onUploadProgress: ProgressEvent => {}\n      });\n      const {\n        fileName,\n        filePath\n      } = res.data;\n      setuploadedFile({\n        fileName,\n        filePath\n      });\n      setMessage(\"File Uploaded\");\n    } catch (err) {\n      if (err.response.status === 500) {\n        setMessage(\"There was a problem with the server\");\n      } else {\n        setMessage(err.response.data.msg);\n      }\n    }\n  };\n\n  return React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, message ? React.createElement(Message, {\n    msg: message,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }) : null, React.createElement(\"form\", {\n    onSubmit: onSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"custom-file\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"file\",\n    className: \"custom-file-input\",\n    id: \"customFile\",\n    onChange: onChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }), React.createElement(\"label\", {\n    className: \"custom-file-label\",\n    htmlFor: \"customFile\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, filename)), React.createElement(\"input\", {\n    type: \"submit\",\n    value: \"Upload\",\n    className: \"btn btn-primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  })), uploadedFile ? React.createElement(\"div\", {\n    className: \"row mt-5\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"col-md-6 m-auto\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, React.createElement(\"h3\", {\n    className: \"text-center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, uploadedFile.fileName), React.createElement(\"img\", {\n    style: {\n      width: \"100%\"\n    },\n    src: uploadedFile.filePath,\n    alt: \"\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }))) : null);\n};\n\nexport default FileUpload;","map":{"version":3,"sources":["/my projects/pocketPhotoEditor/client/src/components/FileUpload/index.js"],"names":["React","Fragment","useState","Message","axios","FileUpload","file","setFile","filename","setFilename","uploadedFile","setuploadedFile","message","setMessage","uploadPercentage","setUploadPercentage","onChange","e","console","log","target","files","name","onSubmit","preventDefault","formData","FormData","append","res","post","headers","onUploadProgress","ProgressEvent","fileName","filePath","data","err","response","status","msg","width"],"mappings":"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","sourcesContent":["import React, {Fragment, useState} from \"react\";\nimport Message from \"./Message.js\";\nimport axios from \"axios\";\n\nconst FileUpload = () => {\n    const [file, setFile] = useState(\"\");\n    const [filename, setFilename] = useState(\"Choose File\");\n    const [uploadedFile, setuploadedFile] = useState({});\n    const [message, setMessage] = useState(\"\");\n    const [uploadPercentage, setUploadPercentage] = useState(0);\n\n    const onChange = e => {\n        console.log(e.target.files[0]);\n        setFile(e.target.files[0]);\n        setFilename(e.target.files[0].name);\n    }\n\n    const onSubmit = async e => {\n        e.preventDefault();\n        const formData = new FormData();\n        formData.append(\"file\", file);\n\n        try {\n            const res = await axios.post(\"/upload\", formData, {\n                headers: {\n                    \"Content-Type\": \"multipart/form-data\"\n                },\n                onUploadProgress: ProgressEvent => {\n\n                }\n            });\n            const { fileName, filePath } = res.data;\n            setuploadedFile({fileName, filePath});\n            setMessage(\"File Uploaded\");\n        } catch (err) {\n            if(err.response.status === 500) {\n                setMessage(\"There was a problem with the server\");\n            } else {\n                setMessage(err.response.data.msg);\n            }\n        }\n    }\n\n    return (\n        <Fragment>\n            {message ? <Message msg={message} /> : null}\n           <form onSubmit={onSubmit}>\n                <div className=\"custom-file\">\n                <input type=\"file\" className=\"custom-file-input\" id=\"customFile\" onChange={onChange}/>\n                <label className=\"custom-file-label\" htmlFor=\"customFile\">\n                    {filename}\n                </label>\n                </div>\n                <input type=\"submit\" \n                value=\"Upload\"\n                className=\"btn btn-primary\" \n                />\n            </form>\n            { uploadedFile ? <div className=\"row mt-5\">\n                <div className=\"col-md-6 m-auto\">\n                    <h3 className=\"text-center\">{uploadedFile.fileName}</h3>\n                    <img style={{width: \"100%\"}} src={uploadedFile.filePath} alt=\"\"/>\n                </div>\n            </div> : null} \n        </Fragment>\n    )\n}\n\nexport default FileUpload;"]},"metadata":{},"sourceType":"module"}